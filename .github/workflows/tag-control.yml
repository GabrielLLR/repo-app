name: Update Tag on PR Merge

on:
  pull_request_target:
    types:
      - closed

jobs:
  update-tag:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Read Swagger version
        id: swagger_version
        run: |
          VERSION=$(grep 'version:' swagger.yaml | awk '{print $2}')
          echo "Swagger version: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Remove existing tag (if exists) via API
        run: |
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" -X DELETE -H "Authorization: token ${{ secrets.REPO_ACCESS_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/git/refs/tags/$VERSION")
          if [ "$RESPONSE" == "204" ]; then
            echo "Tag $VERSION removed successfully"
          else
            echo "No existing tag $VERSION to remove or failed request"
          fi

      - name: Create new tag via API
        run: |
          SHA=$(curl -s -H "Authorization: token ${{ secrets.REPO_ACCESS_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/git/ref/heads/${{ github.event.pull_request.base.ref }}" | jq -r .object.sha)
          
          curl -X POST -H "Authorization: token ${{ secrets.REPO_ACCESS_TOKEN }}" \
          -H "Content-Type: application/json" \
          -d "{\"ref\": \"refs/tags/$VERSION\", \"sha\": \"$SHA\"}" \
          "https://api.github.com/repos/${{ github.repository }}/git/refs"

      - name: Print tag link
        run: |
          echo "Tag created: https://github.com/${{ github.repository }}/releases/tag/$VERSION"
